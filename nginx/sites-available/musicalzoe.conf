# Musical Zoe - Production Site Configuration
# Optimized for SvelteKit with enhanced security and performance

server {
    listen 80;
    listen [::]:80;
    server_name musicalzoe.local localhost _;
    
    # Redirect HTTP to HTTPS in production
    # return 301 https://$server_name$request_uri;
    
    # For demo purposes, we'll serve HTTP directly
    # Remove this block and uncomment redirect above for production
    
    # Root directory for static assets (SvelteKit adapter-node output)
    root /opt/musicalzoe/app/.svelte-kit/output/client;
    index index.html;

    # Enhanced Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.tailwindcss.com https://fonts.googleapis.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self'" always;

    # Gzip configuration
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Static files with long cache
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Try to serve static files directly
        try_files $uri @sveltekit;
    }

    # SvelteKit client assets
    location /_app/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri @sveltekit;
    }

    # Favicon and manifest files
    location ~* \.(ico|webmanifest)$ {
        expires 1y;
        add_header Cache-Control "public";
        try_files $uri @sveltekit;
    }

    # API routes - rate limited
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://sveltekit_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }

    # Authentication routes - more restrictive rate limiting
    location ~* ^/(login|signup|activation) {
        limit_req zone=auth burst=5 nodelay;
        proxy_pass http://sveltekit_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Health check endpoint (no rate limiting)
    location /health {
        access_log off;
        proxy_pass http://sveltekit_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_connect_timeout 5s;
        proxy_read_timeout 10s;
    }

    # Block sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ \.(env|log|conf)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # All other requests go to SvelteKit for SSR
    location / {
        try_files $uri @sveltekit;
    }

    # SvelteKit backend proxy
    location @sveltekit {
        proxy_pass http://sveltekit_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeout settings
        proxy_connect_timeout 75s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        send_timeout 300s;
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
        proxy_pass http://sveltekit_backend;
    }
    
    location = /50x.html {
        internal;
        proxy_pass http://sveltekit_backend;
    }
}

# HTTPS Configuration (for production with SSL)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com www.your-domain.com;
#     
#     # SSL Certificate paths (update these for your certificates)
#     ssl_certificate /etc/ssl/certs/musicalzoe.crt;
#     ssl_certificate_key /etc/ssl/private/musicalzoe.key;
#     
#     # SSL Configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # Include all the location blocks from the HTTP server above
#     # ... (copy all location blocks here)
# }
